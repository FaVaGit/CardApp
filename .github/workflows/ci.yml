name: CI

on:
  push:
    branches: [ Evolution ]
  pull_request:
    branches: [ Evolution ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    timeout-minutes: 25
    env:
      NODE_ENV: test
      CLEAR_USERS_ON_START: false
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20.19.0
          cache: npm

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Install frontend deps
        run: npm ci

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Restore & build backend
        run: |
          dotnet restore Backend/ComplicityGame.Api/ComplicityGame.Api.csproj
          dotnet build Backend/ComplicityGame.Api/ComplicityGame.Api.csproj -c Release --no-restore

      - name: Start backend
        run: |
          dotnet run --project Backend/ComplicityGame.Api/ComplicityGame.Api.csproj --no-build &
          echo $! > backend.pid
          sleep 5

      - name: Backend health check
        run: |
          curl -f http://localhost:5089/api/health || (echo 'Backend not healthy' && cat backend.log || true && exit 1)
        continue-on-error: false

      - name: Shell tests
        run: |
          chmod +x tests/*.sh || true
          ./tests/join-flow.test.sh
          ./tests/reject-flow.test.sh
          ./tests/cancel-flow.test.sh

      - name: Backend unit tests
        run: |
          dotnet test Backend/ComplicityGame.Tests/ComplicityGame.Tests.csproj -c Release --collect:"XPlat Code Coverage" --logger trx
        continue-on-error: false

      - name: Upload coverage (backend)
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: backend-coverage
          path: '**/coverage.cobertura.xml'
          if-no-files-found: warn

      - name: Start frontend dev server
        run: |
          npm run dev -- --host &
          echo $! > frontend.pid
          # Attendere build Vite
          npx wait-on http://localhost:5173

      - name: Playwright tests
        run: npx playwright test --reporter=list,html

      - name: Upload Playwright report on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report
          if-no-files-found: warn

      - name: Upload logs on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: service-logs
          path: |
            backend.log
            frontend.log
          if-no-files-found: warn

      - name: Stop services
        if: always()
        run: |
          if [ -f backend.pid ]; then kill $(cat backend.pid) || true; fi
          if [ -f frontend.pid ]; then kill $(cat frontend.pid) || true; fi
