name: E2E Smoke

on:
  pull_request:
    branches: [ Evolution ]
    paths:
      - 'src/**'
      - 'tests/e2e/**'
      - 'package.json'
      - 'playwright.config.*'
  workflow_dispatch:

jobs:
  e2e-smoke:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      - name: Install deps
        run: npm ci || npm install
      - name: Cache Playwright Browsers
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: playwright-${{ runner.os }}-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            playwright-${{ runner.os }}-
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'
      - name: Build Backend
        working-directory: Backend/ComplicityGame.Api
        run: |
          dotnet restore
          dotnet build --configuration Release --no-restore
      - name: Run Backend
        working-directory: Backend/ComplicityGame.Api
        run: |
          dotnet run --configuration Release --no-build > backend.log 2>&1 &
          echo $! > backend.pid
          echo "Backend PID $(cat backend.pid) started"
      - name: Wait for Backend Health
        run: |
          for i in {1..40}; do
            STATUS=$(curl -fsS -o /dev/null -w '%{http_code}' http://localhost:5000/api/health || true)
            if [ "$STATUS" = "200" ]; then echo "Health OK"; exit 0; fi
            sleep 1;
          done
          echo "Backend not healthy"; exit 1
      - name: Run Smoke E2E
        env:
          CI: true
        run: npm run test:e2e:smoke
      - name: Upload report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-smoke-report
          path: playwright-report
          if-no-files-found: ignore
      - name: Upload backend log
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: backend-log
          path: Backend/ComplicityGame.Api/backend.log
          if-no-files-found: ignore
      - name: Stop Backend
        if: always()
        run: |
          if [ -f Backend/ComplicityGame.Api/backend.pid ]; then kill $(cat Backend/ComplicityGame.Api/backend.pid) || true; fi
